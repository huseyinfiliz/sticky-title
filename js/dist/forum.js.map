{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@huseyinfiliz/sticky-title/webpack/bootstrap","webpack://@huseyinfiliz/sticky-title/webpack/runtime/compat get default export","webpack://@huseyinfiliz/sticky-title/webpack/runtime/define property getters","webpack://@huseyinfiliz/sticky-title/webpack/runtime/hasOwnProperty shorthand","webpack://@huseyinfiliz/sticky-title/external root \"flarum.core.compat['common/extend']\"","webpack://@huseyinfiliz/sticky-title/external root \"flarum.core.compat['forum/components/PostStreamScrubber']\"","webpack://@huseyinfiliz/sticky-title/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@huseyinfiliz/sticky-title/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStreamScrubber'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","import { extend, override } from 'flarum/common/extend';\nimport PostStreamScrubber from 'flarum/forum/components/PostStreamScrubber';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\n\napp.initializers.add('huseyinfiliz/sticky-title', () => {\n  console.log('[huseyinfiliz/sticky-title] Forum loaded');\n  \n  // FoF Pages desteği - Mobilde sayfa başlığını header'a ekle\n  if (window.innerWidth <= 767) {\n    // Route değişimlerini dinle\n    const addPageTitle = () => {\n      // app.forum hazır değilse çık\n      if (!app.forum || !app.forum.attribute) return;\n      \n      // Ayarı kontrol et\n      const fofPagesEnabled = app.forum.attribute('stickyTitleFofPagesHeader');\n      \n      // Ayar kapalıysa veya tanımlı değilse varsayılan olarak true kabul et\n      if (fofPagesEnabled === false) return;\n      \n      // FoF Pages sayfasında mıyız? (route name: 'page')\n      if (app.current && app.current.get && app.current.get('routeName') === 'page') {\n        setTimeout(() => {\n          // Sayfa başlığını bul - PageHero-title selector'ü ekle\n          const pageTitle = document.querySelector('.PageHero-title, h1.PageHero-title');\n          const appNavigation = document.querySelector('#app-navigation .Navigation');\n          \n          console.log('[StickyTitle] Page title found:', pageTitle?.textContent);\n          console.log('[StickyTitle] Navigation found:', !!appNavigation);\n          \n          if (pageTitle && appNavigation) {\n            // Başlık zaten eklenmişse ekleme\n            if (!appNavigation.querySelector('.PageTitle')) {\n              // Back button'dan sonra başlık ekle\n              const titleElement = document.createElement('div');\n              titleElement.className = 'PageTitle Navigation-title';\n              titleElement.textContent = pageTitle.textContent.trim();\n              \n              // Back button'dan sonra ekle\n              const backButton = appNavigation.querySelector('.Navigation-back');\n              if (backButton) {\n                backButton.parentNode.insertBefore(titleElement, backButton.nextSibling);\n                console.log('[StickyTitle] Title added to navigation');\n              } else {\n                appNavigation.appendChild(titleElement);\n              }\n            }\n          }\n        }, 1); // Sayfa render'ını bekle\n      }\n    };\n    \n    // İlk yüklemeyi geciktir\n    setTimeout(addPageTitle, 1);\n    \n    // History değişimlerini dinle (sayfa geçişleri için)\n    const originalPushState = history.pushState;\n    history.pushState = function() {\n      originalPushState.apply(history, arguments);\n      addPageTitle();\n    };\n    \n    // Popstate (geri/ileri butonları)\n    window.addEventListener('popstate', addPageTitle);\n    \n    // m.route değişimlerini dinle\n    if (m && m.route) {\n      const originalRoute = m.route.set;\n      m.route.set = function() {\n        const result = originalRoute.apply(m.route, arguments);\n        setTimeout(addPageTitle, 1);\n        return result;\n      };\n    }\n    \n    // Sayfa yüklendiğinde tekrar dene\n    document.addEventListener('DOMContentLoaded', () => setTimeout(addPageTitle, 1));\n    window.addEventListener('load', () => setTimeout(addPageTitle, 1));\n  }\n  \n  // Mobil header'da scroll'a göre başlık gösterimi\n  let lastScrollTop = 0;\n  let scrollHandler = null;\n  \n  extend(PostStreamScrubber.prototype, 'oninit', function(vnode) {\n    this.showingTitle = false;\n    // Discussion değiştiğinde state'i sıfırla\n    const discussion = this.attrs.stream.discussion;\n    if (discussion && this.lastDiscussionId !== discussion.id()) {\n      this.lastDiscussionId = discussion.id();\n      this.showingTitle = false;\n      lastScrollTop = 0;\n    }\n  });\n  \n  extend(PostStreamScrubber.prototype, 'view', function(vnode) {\n    // Mobil kontrol\n    if (window.innerWidth > 767) return;\n    \n    const mobileScrollDirection = app.forum.attribute('stickyTitleMobileScroll');\n    if (mobileScrollDirection === 'never') return;\n    \n    const discussion = this.attrs.stream.discussion;\n    if (!discussion) return;\n    \n    // Component'e class ekle\n    if (vnode && vnode.attrs) {\n      vnode.attrs.className = (vnode.attrs.className || '') + (this.showingTitle ? ' showing-title' : '');\n    }\n  });\n  \n  extend(PostStreamScrubber.prototype, 'oncreate', function(vnode) {\n    // Mobil header kontrolü\n    if (window.innerWidth <= 767) {\n      const mobileScrollDirection = app.forum.attribute('stickyTitleMobileScroll');\n      if (mobileScrollDirection !== 'never') {\n        const discussion = this.attrs.stream.discussion;\n        if (discussion) {\n          // Button içeriğini wrap et\n          const button = this.element.querySelector('.Dropdown-toggle');\n          if (button && !button.querySelector('.MobileStickyTitle')) {\n            const originalHTML = button.innerHTML;\n            button.innerHTML = `\n              <span class=\"MobileOriginalContent\">${originalHTML}</span>\n              <span class=\"MobileStickyTitle\">${discussion.title()}</span>\n            `;\n          }\n          \n          // Önceki handler'ı temizle\n          if (scrollHandler) {\n            window.removeEventListener('scroll', scrollHandler);\n          }\n          \n          // Yeni scroll handler\n          scrollHandler = () => {\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n            const scrollDirection = scrollTop > lastScrollTop ? 'down' : 'up';\n            lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;\n            \n            let shouldShowTitle = false;\n            \n            if (mobileScrollDirection === 'always' && scrollTop > 100) {\n              shouldShowTitle = true;\n            } else if (mobileScrollDirection === 'scroll_down' && scrollDirection === 'down' && scrollTop > 100) {\n              shouldShowTitle = true;\n            } else if (mobileScrollDirection === 'scroll_up' && scrollDirection === 'up' && scrollTop > 100) {\n              shouldShowTitle = true;\n            }\n            \n            if (this.showingTitle !== shouldShowTitle) {\n              this.showingTitle = shouldShowTitle;\n              this.element.classList.toggle('showing-title', shouldShowTitle);\n            }\n          };\n          \n          window.addEventListener('scroll', scrollHandler);\n          this.scrollHandler = scrollHandler;\n        }\n      }\n    }\n    \n    // Scrubber \"Original Post\" değiştirme - Platform kontrolü ekle\n    const replaceOriginal = app.forum.attribute('stickyTitleScrubberReplace');\n    const isMobile = window.innerWidth <= 767;\n    \n    let shouldReplace = false;\n    if (replaceOriginal === 'both') {\n      shouldReplace = true;\n    } else if (replaceOriginal === 'mobile' && isMobile) {\n      shouldReplace = true;\n    } else if (replaceOriginal === 'desktop' && !isMobile) {\n      shouldReplace = true;\n    }\n    \n    if (shouldReplace) {\n      const discussion = this.attrs.stream.discussion;\n      if (discussion) {\n        const scrubberFirst = this.element.querySelector('.Scrubber-first');\n        if (scrubberFirst) {\n          const icon = scrubberFirst.querySelector('i');\n          scrubberFirst.innerHTML = '';\n          \n          if (icon) {\n            scrubberFirst.appendChild(icon.cloneNode(true));\n            scrubberFirst.appendChild(document.createTextNode(' '));\n          }\n          \n          const titleSpan = document.createElement('span');\n          titleSpan.className = 'ScrubberTitle';\n          titleSpan.textContent = discussion.title();\n          titleSpan.title = discussion.title();\n          \n          scrubberFirst.appendChild(titleSpan);\n        }\n      }\n    }\n  });\n  \n  extend(PostStreamScrubber.prototype, 'onupdate', function(vnode) {\n    // Scrubber güncellendiğinde de platform kontrolü yap\n    const replaceOriginal = app.forum.attribute('stickyTitleScrubberReplace');\n    const isMobile = window.innerWidth <= 767;\n    \n    let shouldReplace = false;\n    if (replaceOriginal === 'both') {\n      shouldReplace = true;\n    } else if (replaceOriginal === 'mobile' && isMobile) {\n      shouldReplace = true;\n    } else if (replaceOriginal === 'desktop' && !isMobile) {\n      shouldReplace = true;\n    }\n    \n    if (shouldReplace) {\n      const discussion = this.attrs.stream.discussion;\n      if (discussion) {\n        const scrubberFirst = this.element.querySelector('.Scrubber-first');\n        if (scrubberFirst && !scrubberFirst.querySelector('.ScrubberTitle')) {\n          const icon = scrubberFirst.querySelector('i');\n          scrubberFirst.innerHTML = '';\n          \n          if (icon) {\n            scrubberFirst.appendChild(icon.cloneNode(true));\n            scrubberFirst.appendChild(document.createTextNode(' '));\n          }\n          \n          const titleSpan = document.createElement('span');\n          titleSpan.className = 'ScrubberTitle';\n          titleSpan.textContent = discussion.title();\n          titleSpan.title = discussion.title();\n          \n          scrubberFirst.appendChild(titleSpan);\n        }\n      }\n    }\n  });\n  \n  extend(PostStreamScrubber.prototype, 'onremove', function() {\n    if (this.scrollHandler) {\n      window.removeEventListener('scroll', this.scrollHandler);\n      this.scrollHandler = null;\n    }\n  });\n  \n  // Desktop'ta sidebar'a tartışma başlığı item'ı ekle\n  extend(DiscussionPage.prototype, 'sidebarItems', function(items) {\n    const showWebTitle = app.forum.attribute('stickyTitleWebScrubber');\n    \n    if (!showWebTitle) return;\n    \n    if (window.innerWidth <= 767) return;\n    \n    const discussion = this.discussion;\n    \n    if (!discussion) return;\n    \n    const scrollToFirst = () => {\n      const stream = this.stream;\n      if (stream) {\n        stream.goToNumber(1);\n      }\n    };\n    \n    const tags = discussion.tags();\n    const tagColorStyle = app.forum.attribute('stickyTitleTagColorStyle') || 'background';\n    \n    items.add('sticky-title',\n      m('.StickyTitlePanel', [\n        m('.StickyTitlePanel-container', {\n          onclick: scrollToFirst,\n          style: 'cursor: pointer;'\n        }, [\n          m('.StickyTitlePanel-header', [\n            m('.StickyTitlePanel-label', discussion.title())\n          ]),\n          m('.StickyTitlePanel-content', [\n            tags && tags.length > 0 ? \n              m('.StickyTitlePanel-tags', {\n                className: `tag-style-${tagColorStyle}`\n              },\n                tags.map(tag => {\n                  const style = {};\n                  const className = ['TagLabel'];\n                  \n                  if (tag.isChild()) {\n                    className.push('TagLabel--child');\n                  }\n                  \n                  // Tag renk stili\n                  if (tagColorStyle === 'background') {\n                    style.backgroundColor = tag.color() || '#888';\n                    style.color = '#fff';\n                  } else if (tagColorStyle === 'text') {\n                    style.color = tag.color() || '#888';\n                    style.backgroundColor = 'transparent';\n                    style.border = '1px solid currentColor';\n                  } else if (tagColorStyle === 'border') {\n                    style.borderColor = tag.color() || '#888';\n                    style.border = `2px solid ${tag.color() || '#888'}`;\n                    style.color = tag.color() || '#888';\n                    style.backgroundColor = 'transparent';\n                  }\n                  \n                  return m('span.TagLabel', {\n                    style: Object.keys(style).map(k => `${k}: ${style[k]}`).join('; '),\n                    className: className.join(' ')\n                  }, [\n                    tag.icon() ? m('span.TagLabel-icon', m('i', { className: tag.icon() })) : null,\n                    m('span.TagLabel-text', tag.name())\n                  ]);\n                })\n              ) : \n              m('.StickyTitlePanel-meta', [\n                m('span.StickyTitlePanel-arrow', m('i.fas.fa-arrow-up')),\n                m('span', app.translator.trans('core.forum.post_scrubber.original_post_link'))\n              ])\n          ])\n        ])\n      ]),\n      1\n    );\n  });\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","initializers","add","console","log","window","innerWidth","addPageTitle","forum","attribute","current","setTimeout","pageTitle","document","querySelector","appNavigation","textContent","titleElement","createElement","className","trim","backButton","parentNode","insertBefore","nextSibling","appendChild","originalPushState","history","pushState","apply","arguments","addEventListener","m","route","originalRoute","set","result","lastScrollTop","scrollHandler","extend","PostStreamScrubber","vnode","this","showingTitle","discussion","attrs","stream","lastDiscussionId","id","_this","mobileScrollDirection","button","element","originalHTML","innerHTML","title","removeEventListener","scrollTop","pageYOffset","documentElement","scrollDirection","shouldShowTitle","classList","toggle","replaceOriginal","isMobile","shouldReplace","scrubberFirst","icon","cloneNode","createTextNode","titleSpan","DiscussionPage","items","_this2","tags","tagColorStyle","onclick","goToNumber","style","length","map","tag","isChild","push","backgroundColor","color","border","borderColor","keys","k","join","name","translator","trans"],"sourceRoot":""}